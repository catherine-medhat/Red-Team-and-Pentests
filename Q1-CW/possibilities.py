# Read the dictionary file and count the number of words
with open("dictionary", "r") as f:
    word_list = [line.strip() for line in f]

total_words = len(word_list)

# Calculate the average number of characters in the dictionary file
total_characters = sum(len(word) for word in word_list)
average_characters = total_characters / total_words

# First password: a single word from the dictionary
total_passwords_first = total_words

# Calculate the number of symbol positions based on the average word length
symbol_positions = round(average_characters)

# Second password: word modification with a number and a symbol
total_modifications = 10 * 8 * 10 * 9  # 10 choices for numbers, 8 choices for number positions, 9 choices for symbol positions after adding number, 10 choices for symbols
total_passwords_second = total_words * total_modifications

# Total possible unique passwords for each ID
total_possible_passwords = total_passwords_first + total_passwords_second

print(f"Total number of Possibilities for Hash 1: {total_words}")
print(f"Average number of characters in the dictionary file: {average_characters:.2f}")
print(f"Total number of Possibilities for Hash 2: {total_passwords_second}")

